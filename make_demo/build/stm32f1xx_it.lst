ARM GAS  /tmp/ccX0G2G7.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "../Core/Src/stm32f1xx_it.c"
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB65:
   1:../Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:../Core/Src/stm32f1xx_it.c **** /**
   3:../Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   4:../Core/Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:../Core/Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:../Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   7:../Core/Src/stm32f1xx_it.c ****   * @attention
   8:../Core/Src/stm32f1xx_it.c ****   *
   9:../Core/Src/stm32f1xx_it.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:../Core/Src/stm32f1xx_it.c ****   * All rights reserved.
  11:../Core/Src/stm32f1xx_it.c ****   *
  12:../Core/Src/stm32f1xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:../Core/Src/stm32f1xx_it.c ****   * in the root directory of this software component.
  14:../Core/Src/stm32f1xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:../Core/Src/stm32f1xx_it.c ****   *
  16:../Core/Src/stm32f1xx_it.c ****   ******************************************************************************
  17:../Core/Src/stm32f1xx_it.c ****   */
  18:../Core/Src/stm32f1xx_it.c **** /* USER CODE END Header */
  19:../Core/Src/stm32f1xx_it.c **** 
  20:../Core/Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:../Core/Src/stm32f1xx_it.c **** #include "main.h"
  22:../Core/Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  23:../Core/Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:../Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  25:../Core/Src/stm32f1xx_it.c **** 
  26:../Core/Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  27:../Core/Src/stm32f1xx_it.c **** 
  28:../Core/Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:../Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  30:../Core/Src/stm32f1xx_it.c **** 
  31:../Core/Src/stm32f1xx_it.c **** /* USER CODE END TD */
  32:../Core/Src/stm32f1xx_it.c **** 
ARM GAS  /tmp/ccX0G2G7.s 			page 2


  33:../Core/Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:../Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  35:../Core/Src/stm32f1xx_it.c **** 
  36:../Core/Src/stm32f1xx_it.c **** /* USER CODE END PD */
  37:../Core/Src/stm32f1xx_it.c **** 
  38:../Core/Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:../Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  40:../Core/Src/stm32f1xx_it.c **** 
  41:../Core/Src/stm32f1xx_it.c **** /* USER CODE END PM */
  42:../Core/Src/stm32f1xx_it.c **** 
  43:../Core/Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:../Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  45:../Core/Src/stm32f1xx_it.c **** uint8_t test_date[] = {0x01,0x00,0x02};
  46:../Core/Src/stm32f1xx_it.c **** /* USER CODE END PV */
  47:../Core/Src/stm32f1xx_it.c **** 
  48:../Core/Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:../Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  50:../Core/Src/stm32f1xx_it.c **** 
  51:../Core/Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  52:../Core/Src/stm32f1xx_it.c **** 
  53:../Core/Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:../Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  55:../Core/Src/stm32f1xx_it.c **** 
  56:../Core/Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  57:../Core/Src/stm32f1xx_it.c **** 
  58:../Core/Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  59:../Core/Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim2;
  60:../Core/Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim3;
  61:../Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  62:../Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  63:../Core/Src/stm32f1xx_it.c **** extern UART_HandleTypeDef huart1;
  64:../Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  65:../Core/Src/stm32f1xx_it.c **** 
  66:../Core/Src/stm32f1xx_it.c **** /* USER CODE END EV */
  67:../Core/Src/stm32f1xx_it.c **** 
  68:../Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  69:../Core/Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  70:../Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  71:../Core/Src/stm32f1xx_it.c **** /**
  72:../Core/Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  73:../Core/Src/stm32f1xx_it.c ****   */
  74:../Core/Src/stm32f1xx_it.c **** void NMI_Handler(void)
  75:../Core/Src/stm32f1xx_it.c **** {
  27              		.loc 1 75 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  76:../Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  77:../Core/Src/stm32f1xx_it.c **** 
  78:../Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  79:../Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  80:../Core/Src/stm32f1xx_it.c ****    while (1)
  34              		.loc 1 80 4 discriminator 1 view .LVU1
  81:../Core/Src/stm32f1xx_it.c ****   {
ARM GAS  /tmp/ccX0G2G7.s 			page 3


  82:../Core/Src/stm32f1xx_it.c ****   }
  35              		.loc 1 82 3 discriminator 1 view .LVU2
  80:../Core/Src/stm32f1xx_it.c ****   {
  36              		.loc 1 80 10 discriminator 1 view .LVU3
  37 0000 FEE7     		b	.L2
  38              		.cfi_endproc
  39              	.LFE65:
  41              		.section	.text.HardFault_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	HardFault_Handler:
  49              	.LFB66:
  83:../Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  84:../Core/Src/stm32f1xx_it.c **** }
  85:../Core/Src/stm32f1xx_it.c **** 
  86:../Core/Src/stm32f1xx_it.c **** /**
  87:../Core/Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  88:../Core/Src/stm32f1xx_it.c ****   */
  89:../Core/Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  90:../Core/Src/stm32f1xx_it.c **** {
  50              		.loc 1 90 1 view -0
  51              		.cfi_startproc
  52              		@ Volatile: function does not return.
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.L4:
  91:../Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  92:../Core/Src/stm32f1xx_it.c **** 
  93:../Core/Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  94:../Core/Src/stm32f1xx_it.c ****   while (1)
  57              		.loc 1 94 3 discriminator 1 view .LVU5
  95:../Core/Src/stm32f1xx_it.c ****   {
  96:../Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  97:../Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  98:../Core/Src/stm32f1xx_it.c ****   }
  58              		.loc 1 98 3 discriminator 1 view .LVU6
  94:../Core/Src/stm32f1xx_it.c ****   {
  59              		.loc 1 94 9 discriminator 1 view .LVU7
  60 0000 FEE7     		b	.L4
  61              		.cfi_endproc
  62              	.LFE66:
  64              		.section	.text.MemManage_Handler,"ax",%progbits
  65              		.align	1
  66              		.global	MemManage_Handler
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  71              	MemManage_Handler:
  72              	.LFB67:
  99:../Core/Src/stm32f1xx_it.c **** }
 100:../Core/Src/stm32f1xx_it.c **** 
 101:../Core/Src/stm32f1xx_it.c **** /**
 102:../Core/Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
ARM GAS  /tmp/ccX0G2G7.s 			page 4


 103:../Core/Src/stm32f1xx_it.c ****   */
 104:../Core/Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 105:../Core/Src/stm32f1xx_it.c **** {
  73              		.loc 1 105 1 view -0
  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L6:
 106:../Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 107:../Core/Src/stm32f1xx_it.c **** 
 108:../Core/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 109:../Core/Src/stm32f1xx_it.c ****   while (1)
  80              		.loc 1 109 3 discriminator 1 view .LVU9
 110:../Core/Src/stm32f1xx_it.c ****   {
 111:../Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 112:../Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 113:../Core/Src/stm32f1xx_it.c ****   }
  81              		.loc 1 113 3 discriminator 1 view .LVU10
 109:../Core/Src/stm32f1xx_it.c ****   {
  82              		.loc 1 109 9 discriminator 1 view .LVU11
  83 0000 FEE7     		b	.L6
  84              		.cfi_endproc
  85              	.LFE67:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  94              	BusFault_Handler:
  95              	.LFB68:
 114:../Core/Src/stm32f1xx_it.c **** }
 115:../Core/Src/stm32f1xx_it.c **** 
 116:../Core/Src/stm32f1xx_it.c **** /**
 117:../Core/Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 118:../Core/Src/stm32f1xx_it.c ****   */
 119:../Core/Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 120:../Core/Src/stm32f1xx_it.c **** {
  96              		.loc 1 120 1 view -0
  97              		.cfi_startproc
  98              		@ Volatile: function does not return.
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              	.L8:
 121:../Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 122:../Core/Src/stm32f1xx_it.c **** 
 123:../Core/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 124:../Core/Src/stm32f1xx_it.c ****   while (1)
 103              		.loc 1 124 3 discriminator 1 view .LVU13
 125:../Core/Src/stm32f1xx_it.c ****   {
 126:../Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 127:../Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 128:../Core/Src/stm32f1xx_it.c ****   }
 104              		.loc 1 128 3 discriminator 1 view .LVU14
ARM GAS  /tmp/ccX0G2G7.s 			page 5


 124:../Core/Src/stm32f1xx_it.c ****   {
 105              		.loc 1 124 9 discriminator 1 view .LVU15
 106 0000 FEE7     		b	.L8
 107              		.cfi_endproc
 108              	.LFE68:
 110              		.section	.text.UsageFault_Handler,"ax",%progbits
 111              		.align	1
 112              		.global	UsageFault_Handler
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 117              	UsageFault_Handler:
 118              	.LFB69:
 129:../Core/Src/stm32f1xx_it.c **** }
 130:../Core/Src/stm32f1xx_it.c **** 
 131:../Core/Src/stm32f1xx_it.c **** /**
 132:../Core/Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 133:../Core/Src/stm32f1xx_it.c ****   */
 134:../Core/Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 135:../Core/Src/stm32f1xx_it.c **** {
 119              		.loc 1 135 1 view -0
 120              		.cfi_startproc
 121              		@ Volatile: function does not return.
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125              	.L10:
 136:../Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 137:../Core/Src/stm32f1xx_it.c **** 
 138:../Core/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 139:../Core/Src/stm32f1xx_it.c ****   while (1)
 126              		.loc 1 139 3 discriminator 1 view .LVU17
 140:../Core/Src/stm32f1xx_it.c ****   {
 141:../Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 142:../Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 143:../Core/Src/stm32f1xx_it.c ****   }
 127              		.loc 1 143 3 discriminator 1 view .LVU18
 139:../Core/Src/stm32f1xx_it.c ****   {
 128              		.loc 1 139 9 discriminator 1 view .LVU19
 129 0000 FEE7     		b	.L10
 130              		.cfi_endproc
 131              	.LFE69:
 133              		.section	.text.SVC_Handler,"ax",%progbits
 134              		.align	1
 135              		.global	SVC_Handler
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 140              	SVC_Handler:
 141              	.LFB70:
 144:../Core/Src/stm32f1xx_it.c **** }
 145:../Core/Src/stm32f1xx_it.c **** 
 146:../Core/Src/stm32f1xx_it.c **** /**
 147:../Core/Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 148:../Core/Src/stm32f1xx_it.c ****   */
 149:../Core/Src/stm32f1xx_it.c **** void SVC_Handler(void)
 150:../Core/Src/stm32f1xx_it.c **** {
ARM GAS  /tmp/ccX0G2G7.s 			page 6


 142              		.loc 1 150 1 view -0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 151:../Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 152:../Core/Src/stm32f1xx_it.c **** 
 153:../Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 154:../Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 155:../Core/Src/stm32f1xx_it.c **** 
 156:../Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 157:../Core/Src/stm32f1xx_it.c **** }
 147              		.loc 1 157 1 view .LVU21
 148 0000 7047     		bx	lr
 149              		.cfi_endproc
 150              	.LFE70:
 152              		.section	.text.DebugMon_Handler,"ax",%progbits
 153              		.align	1
 154              		.global	DebugMon_Handler
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 159              	DebugMon_Handler:
 160              	.LFB71:
 158:../Core/Src/stm32f1xx_it.c **** 
 159:../Core/Src/stm32f1xx_it.c **** /**
 160:../Core/Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 161:../Core/Src/stm32f1xx_it.c ****   */
 162:../Core/Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 163:../Core/Src/stm32f1xx_it.c **** {
 161              		.loc 1 163 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 164:../Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 165:../Core/Src/stm32f1xx_it.c **** 
 166:../Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 167:../Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 168:../Core/Src/stm32f1xx_it.c **** 
 169:../Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 170:../Core/Src/stm32f1xx_it.c **** }
 166              		.loc 1 170 1 view .LVU23
 167 0000 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE71:
 171              		.section	.text.PendSV_Handler,"ax",%progbits
 172              		.align	1
 173              		.global	PendSV_Handler
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 178              	PendSV_Handler:
 179              	.LFB72:
 171:../Core/Src/stm32f1xx_it.c **** 
 172:../Core/Src/stm32f1xx_it.c **** /**
 173:../Core/Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
ARM GAS  /tmp/ccX0G2G7.s 			page 7


 174:../Core/Src/stm32f1xx_it.c ****   */
 175:../Core/Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 176:../Core/Src/stm32f1xx_it.c **** {
 180              		.loc 1 176 1 view -0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 177:../Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 178:../Core/Src/stm32f1xx_it.c **** 
 179:../Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 180:../Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 181:../Core/Src/stm32f1xx_it.c **** 
 182:../Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 183:../Core/Src/stm32f1xx_it.c **** }
 185              		.loc 1 183 1 view .LVU25
 186 0000 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE72:
 190              		.section	.text.SysTick_Handler,"ax",%progbits
 191              		.align	1
 192              		.global	SysTick_Handler
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 197              	SysTick_Handler:
 198              	.LFB73:
 184:../Core/Src/stm32f1xx_it.c **** 
 185:../Core/Src/stm32f1xx_it.c **** /**
 186:../Core/Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 187:../Core/Src/stm32f1xx_it.c ****   */
 188:../Core/Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 189:../Core/Src/stm32f1xx_it.c **** {
 199              		.loc 1 189 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 08B5     		push	{r3, lr}
 204              	.LCFI0:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 3, -8
 207              		.cfi_offset 14, -4
 190:../Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 191:../Core/Src/stm32f1xx_it.c **** 
 192:../Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 193:../Core/Src/stm32f1xx_it.c ****   HAL_IncTick();
 208              		.loc 1 193 3 view .LVU27
 209 0002 FFF7FEFF 		bl	HAL_IncTick
 210              	.LVL0:
 194:../Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 195:../Core/Src/stm32f1xx_it.c **** 
 196:../Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 197:../Core/Src/stm32f1xx_it.c **** }
 211              		.loc 1 197 1 is_stmt 0 view .LVU28
 212 0006 08BD     		pop	{r3, pc}
 213              		.cfi_endproc
 214              	.LFE73:
ARM GAS  /tmp/ccX0G2G7.s 			page 8


 216              		.section	.text.DMA1_Channel4_IRQHandler,"ax",%progbits
 217              		.align	1
 218              		.global	DMA1_Channel4_IRQHandler
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 223              	DMA1_Channel4_IRQHandler:
 224              	.LFB74:
 198:../Core/Src/stm32f1xx_it.c **** 
 199:../Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 200:../Core/Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 201:../Core/Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 202:../Core/Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 203:../Core/Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 204:../Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 205:../Core/Src/stm32f1xx_it.c **** 
 206:../Core/Src/stm32f1xx_it.c **** /**
 207:../Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel4 global interrupt.
 208:../Core/Src/stm32f1xx_it.c ****   */
 209:../Core/Src/stm32f1xx_it.c **** void DMA1_Channel4_IRQHandler(void)
 210:../Core/Src/stm32f1xx_it.c **** {
 225              		.loc 1 210 1 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229 0000 08B5     		push	{r3, lr}
 230              	.LCFI1:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 3, -8
 233              		.cfi_offset 14, -4
 211:../Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 0 */
 212:../Core/Src/stm32f1xx_it.c **** 
 213:../Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 0 */
 214:../Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 234              		.loc 1 214 3 view .LVU30
 235 0002 0248     		ldr	r0, .L18
 236 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 237              	.LVL1:
 215:../Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 1 */
 216:../Core/Src/stm32f1xx_it.c **** 
 217:../Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 1 */
 218:../Core/Src/stm32f1xx_it.c **** }
 238              		.loc 1 218 1 is_stmt 0 view .LVU31
 239 0008 08BD     		pop	{r3, pc}
 240              	.L19:
 241 000a 00BF     		.align	2
 242              	.L18:
 243 000c 00000000 		.word	hdma_usart1_tx
 244              		.cfi_endproc
 245              	.LFE74:
 247              		.section	.text.DMA1_Channel5_IRQHandler,"ax",%progbits
 248              		.align	1
 249              		.global	DMA1_Channel5_IRQHandler
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 254              	DMA1_Channel5_IRQHandler:
ARM GAS  /tmp/ccX0G2G7.s 			page 9


 255              	.LFB75:
 219:../Core/Src/stm32f1xx_it.c **** 
 220:../Core/Src/stm32f1xx_it.c **** /**
 221:../Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel5 global interrupt.
 222:../Core/Src/stm32f1xx_it.c ****   */
 223:../Core/Src/stm32f1xx_it.c **** void DMA1_Channel5_IRQHandler(void)
 224:../Core/Src/stm32f1xx_it.c **** {
 256              		.loc 1 224 1 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260 0000 08B5     		push	{r3, lr}
 261              	.LCFI2:
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 3, -8
 264              		.cfi_offset 14, -4
 225:../Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 0 */
 226:../Core/Src/stm32f1xx_it.c **** 
 227:../Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 0 */
 228:../Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 265              		.loc 1 228 3 view .LVU33
 266 0002 0248     		ldr	r0, .L22
 267 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 268              	.LVL2:
 229:../Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 1 */
 230:../Core/Src/stm32f1xx_it.c **** 
 231:../Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 1 */
 232:../Core/Src/stm32f1xx_it.c **** }
 269              		.loc 1 232 1 is_stmt 0 view .LVU34
 270 0008 08BD     		pop	{r3, pc}
 271              	.L23:
 272 000a 00BF     		.align	2
 273              	.L22:
 274 000c 00000000 		.word	hdma_usart1_rx
 275              		.cfi_endproc
 276              	.LFE75:
 278              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 279              		.align	1
 280              		.global	TIM2_IRQHandler
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 285              	TIM2_IRQHandler:
 286              	.LFB76:
 233:../Core/Src/stm32f1xx_it.c **** 
 234:../Core/Src/stm32f1xx_it.c **** /**
 235:../Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 236:../Core/Src/stm32f1xx_it.c ****   */
 237:../Core/Src/stm32f1xx_it.c **** void TIM2_IRQHandler(void)
 238:../Core/Src/stm32f1xx_it.c **** {
 287              		.loc 1 238 1 is_stmt 1 view -0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291 0000 08B5     		push	{r3, lr}
 292              	.LCFI3:
 293              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccX0G2G7.s 			page 10


 294              		.cfi_offset 3, -8
 295              		.cfi_offset 14, -4
 239:../Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 240:../Core/Src/stm32f1xx_it.c **** 
 241:../Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 242:../Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 296              		.loc 1 242 3 view .LVU36
 297 0002 0248     		ldr	r0, .L26
 298 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 299              	.LVL3:
 243:../Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 244:../Core/Src/stm32f1xx_it.c **** 
 245:../Core/Src/stm32f1xx_it.c ****   //serial_recive_byte();
 246:../Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 247:../Core/Src/stm32f1xx_it.c **** }
 300              		.loc 1 247 1 is_stmt 0 view .LVU37
 301 0008 08BD     		pop	{r3, pc}
 302              	.L27:
 303 000a 00BF     		.align	2
 304              	.L26:
 305 000c 00000000 		.word	htim2
 306              		.cfi_endproc
 307              	.LFE76:
 309              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 310              		.align	1
 311              		.global	TIM3_IRQHandler
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 316              	TIM3_IRQHandler:
 317              	.LFB77:
 248:../Core/Src/stm32f1xx_it.c **** 
 249:../Core/Src/stm32f1xx_it.c **** /**
 250:../Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM3 global interrupt.
 251:../Core/Src/stm32f1xx_it.c ****   */
 252:../Core/Src/stm32f1xx_it.c **** void TIM3_IRQHandler(void)
 253:../Core/Src/stm32f1xx_it.c **** {
 318              		.loc 1 253 1 is_stmt 1 view -0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322 0000 08B5     		push	{r3, lr}
 323              	.LCFI4:
 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 3, -8
 326              		.cfi_offset 14, -4
 254:../Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 255:../Core/Src/stm32f1xx_it.c **** 
 256:../Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM3_IRQn 0 */
 257:../Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim3);
 327              		.loc 1 257 3 view .LVU39
 328 0002 0248     		ldr	r0, .L30
 329 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 330              	.LVL4:
 258:../Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 259:../Core/Src/stm32f1xx_it.c **** 
 260:../Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
ARM GAS  /tmp/ccX0G2G7.s 			page 11


 261:../Core/Src/stm32f1xx_it.c **** }
 331              		.loc 1 261 1 is_stmt 0 view .LVU40
 332 0008 08BD     		pop	{r3, pc}
 333              	.L31:
 334 000a 00BF     		.align	2
 335              	.L30:
 336 000c 00000000 		.word	htim3
 337              		.cfi_endproc
 338              	.LFE77:
 340              		.section	.text.USART1_IRQHandler,"ax",%progbits
 341              		.align	1
 342              		.global	USART1_IRQHandler
 343              		.syntax unified
 344              		.thumb
 345              		.thumb_func
 347              	USART1_IRQHandler:
 348              	.LFB78:
 262:../Core/Src/stm32f1xx_it.c **** 
 263:../Core/Src/stm32f1xx_it.c **** /**
 264:../Core/Src/stm32f1xx_it.c ****   * @brief This function handles USART1 global interrupt.
 265:../Core/Src/stm32f1xx_it.c ****   */
 266:../Core/Src/stm32f1xx_it.c **** void USART1_IRQHandler(void)
 267:../Core/Src/stm32f1xx_it.c **** {
 349              		.loc 1 267 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353 0000 08B5     		push	{r3, lr}
 354              	.LCFI5:
 355              		.cfi_def_cfa_offset 8
 356              		.cfi_offset 3, -8
 357              		.cfi_offset 14, -4
 268:../Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 269:../Core/Src/stm32f1xx_it.c ****   //检查是否是串口空闲中断（用于不定长接收）
 270:../Core/Src/stm32f1xx_it.c ****   if(__HAL_UART_GET_FLAG(&huart1,UART_FLAG_IDLE)){
 358              		.loc 1 270 3 view .LVU42
 359              		.loc 1 270 6 is_stmt 0 view .LVU43
 360 0002 084B     		ldr	r3, .L36
 361 0004 1B68     		ldr	r3, [r3]
 362 0006 1A68     		ldr	r2, [r3]
 363              		.loc 1 270 5 view .LVU44
 364 0008 12F0100F 		tst	r2, #16
 365 000c 03D1     		bne	.L35
 366              	.L33:
 271:../Core/Src/stm32f1xx_it.c ****     __HAL_UART_CLEAR_FLAG(&huart1,UART_FLAG_IDLE);
 272:../Core/Src/stm32f1xx_it.c ****     HAL_UART_IDLE_IRQHandler(&huart1); //串口处理函数
 273:../Core/Src/stm32f1xx_it.c ****   }
 274:../Core/Src/stm32f1xx_it.c **** 
 275:../Core/Src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 276:../Core/Src/stm32f1xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 367              		.loc 1 276 3 is_stmt 1 view .LVU45
 368 000e 0548     		ldr	r0, .L36
 369 0010 FFF7FEFF 		bl	HAL_UART_IRQHandler
 370              	.LVL5:
 277:../Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 278:../Core/Src/stm32f1xx_it.c ****   
 279:../Core/Src/stm32f1xx_it.c **** 
ARM GAS  /tmp/ccX0G2G7.s 			page 12


 280:../Core/Src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 281:../Core/Src/stm32f1xx_it.c **** }
 371              		.loc 1 281 1 is_stmt 0 view .LVU46
 372 0014 08BD     		pop	{r3, pc}
 373              	.L35:
 271:../Core/Src/stm32f1xx_it.c ****     __HAL_UART_CLEAR_FLAG(&huart1,UART_FLAG_IDLE);
 374              		.loc 1 271 5 is_stmt 1 view .LVU47
 375 0016 6FF01002 		mvn	r2, #16
 376 001a 1A60     		str	r2, [r3]
 272:../Core/Src/stm32f1xx_it.c ****   }
 377              		.loc 1 272 5 view .LVU48
 378 001c 0148     		ldr	r0, .L36
 379 001e FFF7FEFF 		bl	HAL_UART_IDLE_IRQHandler
 380              	.LVL6:
 381 0022 F4E7     		b	.L33
 382              	.L37:
 383              		.align	2
 384              	.L36:
 385 0024 00000000 		.word	huart1
 386              		.cfi_endproc
 387              	.LFE78:
 389              		.global	test_date
 390              		.section	.data.test_date,"aw"
 391              		.align	2
 394              	test_date:
 395 0000 010002   		.ascii	"\001\000\002"
 396              		.text
 397              	.Letext0:
 398              		.file 2 "/opt/arm-gnu-toolchain-12.3.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/machine/_defa
 399              		.file 3 "/opt/arm-gnu-toolchain-12.3.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 400              		.file 4 "../Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 401              		.file 5 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 402              		.file 6 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 403              		.file 7 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 404              		.file 8 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 405              		.file 9 "../Core/Inc/usart.h"
 406              		.file 10 "../Core/Inc/bsp_uart.h"
 407              		.file 11 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccX0G2G7.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_it.c
     /tmp/ccX0G2G7.s:19     .text.NMI_Handler:00000000 $t
     /tmp/ccX0G2G7.s:25     .text.NMI_Handler:00000000 NMI_Handler
     /tmp/ccX0G2G7.s:42     .text.HardFault_Handler:00000000 $t
     /tmp/ccX0G2G7.s:48     .text.HardFault_Handler:00000000 HardFault_Handler
     /tmp/ccX0G2G7.s:65     .text.MemManage_Handler:00000000 $t
     /tmp/ccX0G2G7.s:71     .text.MemManage_Handler:00000000 MemManage_Handler
     /tmp/ccX0G2G7.s:88     .text.BusFault_Handler:00000000 $t
     /tmp/ccX0G2G7.s:94     .text.BusFault_Handler:00000000 BusFault_Handler
     /tmp/ccX0G2G7.s:111    .text.UsageFault_Handler:00000000 $t
     /tmp/ccX0G2G7.s:117    .text.UsageFault_Handler:00000000 UsageFault_Handler
     /tmp/ccX0G2G7.s:134    .text.SVC_Handler:00000000 $t
     /tmp/ccX0G2G7.s:140    .text.SVC_Handler:00000000 SVC_Handler
     /tmp/ccX0G2G7.s:153    .text.DebugMon_Handler:00000000 $t
     /tmp/ccX0G2G7.s:159    .text.DebugMon_Handler:00000000 DebugMon_Handler
     /tmp/ccX0G2G7.s:172    .text.PendSV_Handler:00000000 $t
     /tmp/ccX0G2G7.s:178    .text.PendSV_Handler:00000000 PendSV_Handler
     /tmp/ccX0G2G7.s:191    .text.SysTick_Handler:00000000 $t
     /tmp/ccX0G2G7.s:197    .text.SysTick_Handler:00000000 SysTick_Handler
     /tmp/ccX0G2G7.s:217    .text.DMA1_Channel4_IRQHandler:00000000 $t
     /tmp/ccX0G2G7.s:223    .text.DMA1_Channel4_IRQHandler:00000000 DMA1_Channel4_IRQHandler
     /tmp/ccX0G2G7.s:243    .text.DMA1_Channel4_IRQHandler:0000000c $d
     /tmp/ccX0G2G7.s:248    .text.DMA1_Channel5_IRQHandler:00000000 $t
     /tmp/ccX0G2G7.s:254    .text.DMA1_Channel5_IRQHandler:00000000 DMA1_Channel5_IRQHandler
     /tmp/ccX0G2G7.s:274    .text.DMA1_Channel5_IRQHandler:0000000c $d
     /tmp/ccX0G2G7.s:279    .text.TIM2_IRQHandler:00000000 $t
     /tmp/ccX0G2G7.s:285    .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
     /tmp/ccX0G2G7.s:305    .text.TIM2_IRQHandler:0000000c $d
     /tmp/ccX0G2G7.s:310    .text.TIM3_IRQHandler:00000000 $t
     /tmp/ccX0G2G7.s:316    .text.TIM3_IRQHandler:00000000 TIM3_IRQHandler
     /tmp/ccX0G2G7.s:336    .text.TIM3_IRQHandler:0000000c $d
     /tmp/ccX0G2G7.s:341    .text.USART1_IRQHandler:00000000 $t
     /tmp/ccX0G2G7.s:347    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
     /tmp/ccX0G2G7.s:385    .text.USART1_IRQHandler:00000024 $d
     /tmp/ccX0G2G7.s:394    .data.test_date:00000000 test_date
     /tmp/ccX0G2G7.s:391    .data.test_date:00000000 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_usart1_tx
hdma_usart1_rx
HAL_TIM_IRQHandler
htim2
htim3
HAL_UART_IRQHandler
HAL_UART_IDLE_IRQHandler
huart1
