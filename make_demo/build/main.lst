ARM GAS  /tmp/cc8Pglr3.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "../Core/Src/main.c"
  18              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  19              		.align	1
  20              		.global	HAL_TIM_PeriodElapsedCallback
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	HAL_TIM_PeriodElapsedCallback:
  26              	.LVL0:
  27              	.LFB67:
   1:../Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:../Core/Src/main.c **** /**
   3:../Core/Src/main.c ****   ******************************************************************************
   4:../Core/Src/main.c ****   * @file           : main.c
   5:../Core/Src/main.c ****   * @brief          : Main program body
   6:../Core/Src/main.c ****   ******************************************************************************
   7:../Core/Src/main.c ****   * @attention
   8:../Core/Src/main.c ****   *
   9:../Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:../Core/Src/main.c ****   * All rights reserved.
  11:../Core/Src/main.c ****   *
  12:../Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:../Core/Src/main.c ****   * in the root directory of this software component.
  14:../Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:../Core/Src/main.c ****   *
  16:../Core/Src/main.c ****   ******************************************************************************
  17:../Core/Src/main.c ****   */
  18:../Core/Src/main.c **** /* USER CODE END Header */
  19:../Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:../Core/Src/main.c **** #include "main.h"
  21:../Core/Src/main.c **** #include "dma.h"
  22:../Core/Src/main.c **** #include "tim.h"
  23:../Core/Src/main.c **** #include "usart.h"
  24:../Core/Src/main.c **** #include "gpio.h"
  25:../Core/Src/main.c **** 
  26:../Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:../Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:../Core/Src/main.c **** #include "servo_pwm.h"
  29:../Core/Src/main.c **** #include "string.h"
  30:../Core/Src/main.c **** /* USER CODE END Includes */
  31:../Core/Src/main.c **** 
ARM GAS  /tmp/cc8Pglr3.s 			page 2


  32:../Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:../Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:../Core/Src/main.c **** 
  35:../Core/Src/main.c **** /* USER CODE END PTD */
  36:../Core/Src/main.c **** 
  37:../Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:../Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:../Core/Src/main.c **** 
  40:../Core/Src/main.c **** 
  41:../Core/Src/main.c **** /* USER CODE END PD */
  42:../Core/Src/main.c **** 
  43:../Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:../Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:../Core/Src/main.c **** 
  46:../Core/Src/main.c **** /* USER CODE END PM */
  47:../Core/Src/main.c **** 
  48:../Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:../Core/Src/main.c **** 
  50:../Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:../Core/Src/main.c **** 
  52:../Core/Src/main.c **** uint8_t tx_data[] = {0x03,0x02,0x01};
  53:../Core/Src/main.c **** /* USER CODE END PV */
  54:../Core/Src/main.c **** 
  55:../Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  56:../Core/Src/main.c **** void SystemClock_Config(void);
  57:../Core/Src/main.c **** /* USER CODE BEGIN PFP */
  58:../Core/Src/main.c **** 
  59:../Core/Src/main.c **** /* USER CODE END PFP */
  60:../Core/Src/main.c **** 
  61:../Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  62:../Core/Src/main.c **** /* USER CODE BEGIN 0 */
  63:../Core/Src/main.c **** /* USER CODE END 0 */
  64:../Core/Src/main.c **** 
  65:../Core/Src/main.c **** /**
  66:../Core/Src/main.c ****   * @brief  The application entry point.
  67:../Core/Src/main.c ****   * @retval int
  68:../Core/Src/main.c ****   */
  69:../Core/Src/main.c **** int main(void)
  70:../Core/Src/main.c **** {
  71:../Core/Src/main.c **** 
  72:../Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  73:../Core/Src/main.c **** 
  74:../Core/Src/main.c ****   /* USER CODE END 1 */
  75:../Core/Src/main.c **** 
  76:../Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  77:../Core/Src/main.c **** 
  78:../Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  79:../Core/Src/main.c ****   HAL_Init();
  80:../Core/Src/main.c **** 
  81:../Core/Src/main.c ****   /* USER CODE BEGIN Init */
  82:../Core/Src/main.c **** 
  83:../Core/Src/main.c ****   /* USER CODE END Init */
  84:../Core/Src/main.c **** 
  85:../Core/Src/main.c ****   /* Configure the system clock */
  86:../Core/Src/main.c ****   SystemClock_Config();
  87:../Core/Src/main.c **** 
  88:../Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
ARM GAS  /tmp/cc8Pglr3.s 			page 3


  89:../Core/Src/main.c ****   
  90:../Core/Src/main.c ****   /* USER CODE END SysInit */
  91:../Core/Src/main.c **** 
  92:../Core/Src/main.c ****   /* Initialize all configured peripherals */
  93:../Core/Src/main.c ****   MX_GPIO_Init();
  94:../Core/Src/main.c ****   MX_DMA_Init();
  95:../Core/Src/main.c ****   MX_TIM3_Init();
  96:../Core/Src/main.c ****   MX_TIM2_Init();
  97:../Core/Src/main.c ****   MX_USART1_UART_Init();
  98:../Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  99:../Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_3);
 100:../Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_3);
 101:../Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);
 102:../Core/Src/main.c ****   Servo_PWM_Set(70);
 103:../Core/Src/main.c ****   car_speed_set(500);
 104:../Core/Src/main.c ****   
 105:../Core/Src/main.c ****   //Servo_PWM_Set(50);
 106:../Core/Src/main.c ****   /* USER CODE END 2 */
 107:../Core/Src/main.c ****   bsp_init();
 108:../Core/Src/main.c ****   /* Infinite loop */
 109:../Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 110:../Core/Src/main.c ****   while (1)
 111:../Core/Src/main.c ****   {
 112:../Core/Src/main.c ****     //HAL_UART_Transmit_DMA(&huart1, tx_buf, 1);  
 113:../Core/Src/main.c **** //		if(flag == 1){
 114:../Core/Src/main.c **** //			for(uint8_t i = 0 ; i < length ;i ++ ){
 115:../Core/Src/main.c **** //				tx_buf[i] = rx_buf[length - i -1];
 116:../Core/Src/main.c **** //			} 
 117:../Core/Src/main.c **** //			HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,GPIO_PIN_SET);
 118:../Core/Src/main.c **** //			tx_buf[length] = '\0';
 119:../Core/Src/main.c **** //			serial_send_str(tx_buf);
 120:../Core/Src/main.c **** //			HAL_UARTEx_ReceiveToIdle_IT(&huart1,rx_buf,UART_RX_BUF_SIZE );
 121:../Core/Src/main.c **** //			flag = 0 ;
 122:../Core/Src/main.c **** //		}
 123:../Core/Src/main.c **** 		//serial_send_str(tx_data);
 124:../Core/Src/main.c ****     //serial_send_num(tx_data,3);
 125:../Core/Src/main.c ****     /* USER CODE END WHILE */
 126:../Core/Src/main.c **** 
 127:../Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 128:../Core/Src/main.c ****   }
 129:../Core/Src/main.c ****   /* USER CODE END 3 */
 130:../Core/Src/main.c **** }
 131:../Core/Src/main.c **** 
 132:../Core/Src/main.c **** /**
 133:../Core/Src/main.c ****   * @brief System Clock Configuration
 134:../Core/Src/main.c ****   * @retval None
 135:../Core/Src/main.c ****   */
 136:../Core/Src/main.c **** void SystemClock_Config(void)
 137:../Core/Src/main.c **** {
 138:../Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 139:../Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 140:../Core/Src/main.c **** 
 141:../Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 142:../Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 143:../Core/Src/main.c ****   */
 144:../Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 145:../Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
ARM GAS  /tmp/cc8Pglr3.s 			page 4


 146:../Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 147:../Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 148:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 149:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 150:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 151:../Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 152:../Core/Src/main.c ****   {
 153:../Core/Src/main.c ****     Error_Handler();
 154:../Core/Src/main.c ****   }
 155:../Core/Src/main.c **** 
 156:../Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 157:../Core/Src/main.c ****   */
 158:../Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 159:../Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 160:../Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 161:../Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 162:../Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 163:../Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 164:../Core/Src/main.c **** 
 165:../Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 166:../Core/Src/main.c ****   {
 167:../Core/Src/main.c ****     Error_Handler();
 168:../Core/Src/main.c ****   }
 169:../Core/Src/main.c **** }
 170:../Core/Src/main.c **** 
 171:../Core/Src/main.c **** // /* USER CODE BEGIN 4 */
 172:../Core/Src/main.c **** // void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 173:../Core/Src/main.c **** //     //if(huart->Instance == USART1){
 174:../Core/Src/main.c **** //       memcpy(tx_buf,rx_buf,1);
 175:../Core/Src/main.c **** //       HAL_UART_Transmit_DMA(&huart1, tx_buf, 100);
 176:../Core/Src/main.c **** //       HAL_UART_Receive_DMA(&huart1,rx_buf,1);
 177:../Core/Src/main.c **** //     //}
 178:../Core/Src/main.c **** //     // 不立即开启接收
 179:../Core/Src/main.c **** // }
 180:../Core/Src/main.c **** 
 181:../Core/Src/main.c **** // void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart) {
 182:../Core/Src/main.c **** //     HAL_UART_Receive_IT(&huart1, rx_buf, 1);  // 等发送完才开始接收
 183:../Core/Src/main.c **** // }
 184:../Core/Src/main.c **** 
 185:../Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
  28              		.loc 1 185 60 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 186:../Core/Src/main.c ****   if(htim==&htim2){
  33              		.loc 1 186 3 view .LVU1
 187:../Core/Src/main.c ****     
 188:../Core/Src/main.c ****   }
  34              		.loc 1 188 3 view .LVU2
 189:../Core/Src/main.c **** }
  35              		.loc 1 189 1 is_stmt 0 view .LVU3
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE67:
  40              		.section	.text.Error_Handler,"ax",%progbits
  41              		.align	1
ARM GAS  /tmp/cc8Pglr3.s 			page 5


  42              		.global	Error_Handler
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  47              	Error_Handler:
  48              	.LFB68:
 190:../Core/Src/main.c **** 
 191:../Core/Src/main.c **** 
 192:../Core/Src/main.c **** /* USER CODE END 4 */
 193:../Core/Src/main.c **** 
 194:../Core/Src/main.c **** /**
 195:../Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 196:../Core/Src/main.c ****   * @retval None
 197:../Core/Src/main.c ****   */
 198:../Core/Src/main.c **** void Error_Handler(void)
 199:../Core/Src/main.c **** {
  49              		.loc 1 199 1 is_stmt 1 view -0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
 200:../Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 201:../Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 202:../Core/Src/main.c ****   __disable_irq();
  55              		.loc 1 202 3 view .LVU5
  56              	.LBB4:
  57              	.LBI4:
  58              		.file 2 "../Drivers/CMSIS/Include/cmsis_gcc.h"
   1:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:../Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
ARM GAS  /tmp/cc8Pglr3.s 			page 6


  29:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:../Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc8Pglr3.s 			page 7


  86:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:../Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  59              		.loc 2 140 27 view .LVU6
  60              	.LBB5:
ARM GAS  /tmp/cc8Pglr3.s 			page 8


 141:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  61              		.loc 2 142 3 view .LVU7
  62              		.syntax unified
  63              	@ 142 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
  64 0000 72B6     		cpsid i
  65              	@ 0 "" 2
  66              		.thumb
  67              		.syntax unified
  68              	.L3:
  69              	.LBE5:
  70              	.LBE4:
 203:../Core/Src/main.c ****   while (1)
  71              		.loc 1 203 3 discriminator 1 view .LVU8
 204:../Core/Src/main.c ****   {
 205:../Core/Src/main.c ****     
 206:../Core/Src/main.c ****   }
  72              		.loc 1 206 3 discriminator 1 view .LVU9
 203:../Core/Src/main.c ****   while (1)
  73              		.loc 1 203 9 discriminator 1 view .LVU10
  74 0002 FEE7     		b	.L3
  75              		.cfi_endproc
  76              	.LFE68:
  78              		.section	.text.SystemClock_Config,"ax",%progbits
  79              		.align	1
  80              		.global	SystemClock_Config
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  85              	SystemClock_Config:
  86              	.LFB66:
 137:../Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  87              		.loc 1 137 1 view -0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 64
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91 0000 00B5     		push	{lr}
  92              	.LCFI0:
  93              		.cfi_def_cfa_offset 4
  94              		.cfi_offset 14, -4
  95 0002 91B0     		sub	sp, sp, #68
  96              	.LCFI1:
  97              		.cfi_def_cfa_offset 72
 138:../Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  98              		.loc 1 138 3 view .LVU12
 138:../Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  99              		.loc 1 138 22 is_stmt 0 view .LVU13
 100 0004 2822     		movs	r2, #40
 101 0006 0021     		movs	r1, #0
 102 0008 06A8     		add	r0, sp, #24
 103 000a FFF7FEFF 		bl	memset
 104              	.LVL1:
 139:../Core/Src/main.c **** 
 105              		.loc 1 139 3 is_stmt 1 view .LVU14
 139:../Core/Src/main.c **** 
 106              		.loc 1 139 22 is_stmt 0 view .LVU15
 107 000e 0023     		movs	r3, #0
ARM GAS  /tmp/cc8Pglr3.s 			page 9


 108 0010 0193     		str	r3, [sp, #4]
 109 0012 0293     		str	r3, [sp, #8]
 110 0014 0393     		str	r3, [sp, #12]
 111 0016 0493     		str	r3, [sp, #16]
 112 0018 0593     		str	r3, [sp, #20]
 144:../Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 113              		.loc 1 144 3 is_stmt 1 view .LVU16
 144:../Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 114              		.loc 1 144 36 is_stmt 0 view .LVU17
 115 001a 0122     		movs	r2, #1
 116 001c 0692     		str	r2, [sp, #24]
 145:../Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 117              		.loc 1 145 3 is_stmt 1 view .LVU18
 145:../Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 118              		.loc 1 145 30 is_stmt 0 view .LVU19
 119 001e 4FF48033 		mov	r3, #65536
 120 0022 0793     		str	r3, [sp, #28]
 146:../Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 121              		.loc 1 146 3 is_stmt 1 view .LVU20
 147:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 122              		.loc 1 147 3 view .LVU21
 147:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 123              		.loc 1 147 30 is_stmt 0 view .LVU22
 124 0024 0A92     		str	r2, [sp, #40]
 148:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 125              		.loc 1 148 3 is_stmt 1 view .LVU23
 148:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 126              		.loc 1 148 34 is_stmt 0 view .LVU24
 127 0026 0222     		movs	r2, #2
 128 0028 0D92     		str	r2, [sp, #52]
 149:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 129              		.loc 1 149 3 is_stmt 1 view .LVU25
 149:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 130              		.loc 1 149 35 is_stmt 0 view .LVU26
 131 002a 0E93     		str	r3, [sp, #56]
 150:../Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 132              		.loc 1 150 3 is_stmt 1 view .LVU27
 150:../Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 133              		.loc 1 150 32 is_stmt 0 view .LVU28
 134 002c 4FF4E013 		mov	r3, #1835008
 135 0030 0F93     		str	r3, [sp, #60]
 151:../Core/Src/main.c ****   {
 136              		.loc 1 151 3 is_stmt 1 view .LVU29
 151:../Core/Src/main.c ****   {
 137              		.loc 1 151 7 is_stmt 0 view .LVU30
 138 0032 06A8     		add	r0, sp, #24
 139 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 140              	.LVL2:
 151:../Core/Src/main.c ****   {
 141              		.loc 1 151 6 view .LVU31
 142 0038 80B9     		cbnz	r0, .L8
 158:../Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 143              		.loc 1 158 3 is_stmt 1 view .LVU32
 158:../Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 144              		.loc 1 158 31 is_stmt 0 view .LVU33
 145 003a 0F23     		movs	r3, #15
 146 003c 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/cc8Pglr3.s 			page 10


 160:../Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 147              		.loc 1 160 3 is_stmt 1 view .LVU34
 160:../Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 148              		.loc 1 160 34 is_stmt 0 view .LVU35
 149 003e 0221     		movs	r1, #2
 150 0040 0291     		str	r1, [sp, #8]
 161:../Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 151              		.loc 1 161 3 is_stmt 1 view .LVU36
 161:../Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 152              		.loc 1 161 35 is_stmt 0 view .LVU37
 153 0042 0023     		movs	r3, #0
 154 0044 0393     		str	r3, [sp, #12]
 162:../Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 155              		.loc 1 162 3 is_stmt 1 view .LVU38
 162:../Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 156              		.loc 1 162 36 is_stmt 0 view .LVU39
 157 0046 4FF48062 		mov	r2, #1024
 158 004a 0492     		str	r2, [sp, #16]
 163:../Core/Src/main.c **** 
 159              		.loc 1 163 3 is_stmt 1 view .LVU40
 163:../Core/Src/main.c **** 
 160              		.loc 1 163 36 is_stmt 0 view .LVU41
 161 004c 0593     		str	r3, [sp, #20]
 165:../Core/Src/main.c ****   {
 162              		.loc 1 165 3 is_stmt 1 view .LVU42
 165:../Core/Src/main.c ****   {
 163              		.loc 1 165 7 is_stmt 0 view .LVU43
 164 004e 01A8     		add	r0, sp, #4
 165 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 166              	.LVL3:
 165:../Core/Src/main.c ****   {
 167              		.loc 1 165 6 view .LVU44
 168 0054 20B9     		cbnz	r0, .L9
 169:../Core/Src/main.c **** 
 169              		.loc 1 169 1 view .LVU45
 170 0056 11B0     		add	sp, sp, #68
 171              	.LCFI2:
 172              		.cfi_remember_state
 173              		.cfi_def_cfa_offset 4
 174              		@ sp needed
 175 0058 5DF804FB 		ldr	pc, [sp], #4
 176              	.L8:
 177              	.LCFI3:
 178              		.cfi_restore_state
 153:../Core/Src/main.c ****   }
 179              		.loc 1 153 5 is_stmt 1 view .LVU46
 180 005c FFF7FEFF 		bl	Error_Handler
 181              	.LVL4:
 182              	.L9:
 167:../Core/Src/main.c ****   }
 183              		.loc 1 167 5 view .LVU47
 184 0060 FFF7FEFF 		bl	Error_Handler
 185              	.LVL5:
 186              		.cfi_endproc
 187              	.LFE66:
 189              		.section	.text.main,"ax",%progbits
 190              		.align	1
ARM GAS  /tmp/cc8Pglr3.s 			page 11


 191              		.global	main
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 196              	main:
 197              	.LFB65:
  70:../Core/Src/main.c **** 
 198              		.loc 1 70 1 view -0
 199              		.cfi_startproc
 200              		@ Volatile: function does not return.
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 08B5     		push	{r3, lr}
 204              	.LCFI4:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 3, -8
 207              		.cfi_offset 14, -4
  79:../Core/Src/main.c **** 
 208              		.loc 1 79 3 view .LVU49
 209 0002 FFF7FEFF 		bl	HAL_Init
 210              	.LVL6:
  86:../Core/Src/main.c **** 
 211              		.loc 1 86 3 view .LVU50
 212 0006 FFF7FEFF 		bl	SystemClock_Config
 213              	.LVL7:
  93:../Core/Src/main.c ****   MX_DMA_Init();
 214              		.loc 1 93 3 view .LVU51
 215 000a FFF7FEFF 		bl	MX_GPIO_Init
 216              	.LVL8:
  94:../Core/Src/main.c ****   MX_TIM3_Init();
 217              		.loc 1 94 3 view .LVU52
 218 000e FFF7FEFF 		bl	MX_DMA_Init
 219              	.LVL9:
  95:../Core/Src/main.c ****   MX_TIM2_Init();
 220              		.loc 1 95 3 view .LVU53
 221 0012 FFF7FEFF 		bl	MX_TIM3_Init
 222              	.LVL10:
  96:../Core/Src/main.c ****   MX_USART1_UART_Init();
 223              		.loc 1 96 3 view .LVU54
 224 0016 FFF7FEFF 		bl	MX_TIM2_Init
 225              	.LVL11:
  97:../Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 226              		.loc 1 97 3 view .LVU55
 227 001a FFF7FEFF 		bl	MX_USART1_UART_Init
 228              	.LVL12:
  99:../Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_3);
 229              		.loc 1 99 3 view .LVU56
 230 001e 0821     		movs	r1, #8
 231 0020 0A48     		ldr	r0, .L13
 232 0022 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 233              	.LVL13:
 100:../Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);
 234              		.loc 1 100 3 view .LVU57
 235 0026 0A4C     		ldr	r4, .L13+4
 236 0028 0821     		movs	r1, #8
 237 002a 2046     		mov	r0, r4
 238 002c FFF7FEFF 		bl	HAL_TIM_PWM_Start
ARM GAS  /tmp/cc8Pglr3.s 			page 12


 239              	.LVL14:
 101:../Core/Src/main.c ****   Servo_PWM_Set(70);
 240              		.loc 1 101 3 view .LVU58
 241 0030 2046     		mov	r0, r4
 242 0032 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 243              	.LVL15:
 102:../Core/Src/main.c ****   car_speed_set(500);
 244              		.loc 1 102 3 view .LVU59
 245 0036 4620     		movs	r0, #70
 246 0038 FFF7FEFF 		bl	Servo_PWM_Set
 247              	.LVL16:
 103:../Core/Src/main.c ****   
 248              		.loc 1 103 3 view .LVU60
 249 003c 4FF4FA70 		mov	r0, #500
 250 0040 FFF7FEFF 		bl	car_speed_set
 251              	.LVL17:
 107:../Core/Src/main.c ****   /* Infinite loop */
 252              		.loc 1 107 3 view .LVU61
 253 0044 FFF7FEFF 		bl	bsp_init
 254              	.LVL18:
 255              	.L11:
 110:../Core/Src/main.c ****   {
 256              		.loc 1 110 3 discriminator 1 view .LVU62
 128:../Core/Src/main.c ****   /* USER CODE END 3 */
 257              		.loc 1 128 3 discriminator 1 view .LVU63
 110:../Core/Src/main.c ****   {
 258              		.loc 1 110 9 discriminator 1 view .LVU64
 259 0048 FEE7     		b	.L11
 260              	.L14:
 261 004a 00BF     		.align	2
 262              	.L13:
 263 004c 00000000 		.word	htim3
 264 0050 00000000 		.word	htim2
 265              		.cfi_endproc
 266              	.LFE65:
 268              		.global	tx_data
 269              		.section	.data.tx_data,"aw"
 270              		.align	2
 273              	tx_data:
 274 0000 030201   		.ascii	"\003\002\001"
 275              		.text
 276              	.Letext0:
 277              		.file 3 "/opt/arm-gnu-toolchain-12.3.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/machine/_defa
 278              		.file 4 "/opt/arm-gnu-toolchain-12.3.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 279              		.file 5 "../Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 280              		.file 6 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 281              		.file 7 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 282              		.file 8 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 283              		.file 9 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 284              		.file 10 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 285              		.file 11 "../Core/Inc/tim.h"
 286              		.file 12 "../Core/Inc/bsp_monter.h"
 287              		.file 13 "../Core/Inc/servo_pwm.h"
 288              		.file 14 "../Core/Inc/usart.h"
 289              		.file 15 "../Core/Inc/dma.h"
 290              		.file 16 "../Core/Inc/gpio.h"
 291              		.file 17 "../Core/Inc/bsp_init.h"
ARM GAS  /tmp/cc8Pglr3.s 			page 13


 292              		.file 18 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 293              		.file 19 "<built-in>"
ARM GAS  /tmp/cc8Pglr3.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cc8Pglr3.s:19     .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
     /tmp/cc8Pglr3.s:25     .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cc8Pglr3.s:41     .text.Error_Handler:00000000 $t
     /tmp/cc8Pglr3.s:47     .text.Error_Handler:00000000 Error_Handler
     /tmp/cc8Pglr3.s:79     .text.SystemClock_Config:00000000 $t
     /tmp/cc8Pglr3.s:85     .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/cc8Pglr3.s:190    .text.main:00000000 $t
     /tmp/cc8Pglr3.s:196    .text.main:00000000 main
     /tmp/cc8Pglr3.s:263    .text.main:0000004c $d
     /tmp/cc8Pglr3.s:273    .data.tx_data:00000000 tx_data
     /tmp/cc8Pglr3.s:270    .data.tx_data:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_TIM3_Init
MX_TIM2_Init
MX_USART1_UART_Init
HAL_TIM_PWM_Start
HAL_TIM_Base_Start_IT
Servo_PWM_Set
car_speed_set
bsp_init
htim3
htim2
